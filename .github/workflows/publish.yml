name: Publish
on:
  push:
    tags: ["*"]

jobs:
  # publish_windows:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: windows-latest
  #   permissions:
  #     contents: write
    
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '>=16.8.0'

  #     - name: Build Electron app
  #       # uses: samuelmeuli/action-electron-builder@v1
  #       uses: coparse-inc/action-electron-builder@v1.0.0
  #       with:
  #         args: --ia32 --x64
  #         max_attempts: 3
  #         github_token: ${{ secrets.github_token }}
  #         release: true  # not create release

  #     - name: see directory
  #       run: |
  #         dir dist

  #     # - name: Create Release
  #     #   env:
  #     #     GH_TOKEN: ${{ github.token }}
  #     #     GH_REPO: ${{ github.repository }}
  #     #   run: |
  #     #     gh release create --draft "${{ github.ref_name }}" --title "${{ github.ref_name }}" --generate-notes 

  #     # - name: Upload Release Asset
  #     #   env:
  #     #     GH_TOKEN: ${{ github.token }}
  #     #     GH_REPO: ${{ github.repository }}
  #     #   run: |
  #     #     gh release upload "${{ github.ref_name }}" "dist/*.exe"
      

  publish_mac:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    
    strategy:
      matrix:
        os: [macos-latest, linux-latest] #, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json')}}

      # - name: Install Node.js, NPM and Yarn
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '>=16.8.0'

      - name: apt-update
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get update

      - name: autoremove
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt autoremove

      - name: Install libarchive rpm on Linux
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get install libarchive-tools rpm

      - name: Build Electron app
        uses: coparse-inc/action-electron-builder@v1.0.0
        with:
          max_attempts: 3
          github_token: ${{ secrets.github_token }}
          release: true

      - name: see directory
        run: ls ./dist
        # run: |
        #   if [[ startsWith(matrix.os, 'windows-latest') ]]; then
        #     dir dist
        #   else
        #     ls ./dist
        #   fi

  # publish_linux:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ${{ matrix.os }}
  #   permissions:
  #     contents: write
    
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest] #, windows-latest]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '>=16.8.0'

  #     - name: apt-update
  #       if: startsWith(matrix.os, 'ubuntu-latest')
  #       run: sudo apt-get update

  #     - name: autoremove
  #       if: startsWith(matrix.os, 'ubuntu-latest')
  #       run: sudo apt autoremove

  #     - name: Install libarchive rpm on Linux
  #       if: startsWith(matrix.os, 'ubuntu-latest')
  #       run: sudo apt-get install libarchive-tools rpm

  #     - name: Build Electron app
  #       uses: coparse-inc/action-electron-builder@v1.0.0
  #       with:
  #         max_attempts: 3
  #         github_token: ${{ secrets.github_token }}
  #         release: true

  #     - name: see directory
  #       run: ls ./dist
  #       # run: |
  #       #   if [[ startsWith(matrix.os, 'windows-latest') ]]; then
  #       #     dir dist
  #       #   else
  #       #     ls ./dist
  #       #   fi

  #     # - name: Upload Release Asset
  #     #   env:
  #     #     GH_TOKEN: ${{ github.token }}
  #     #     GH_REPO: ${{ github.repository }}
  #     #   run: |
  #     #     gh release upload "${{ github.ref_name }}" "./dist/*.dmg"
  #     #     gh release upload "${{ github.ref_name }}" "./dist/*.zip"
  #     #     gh release upload "${{ github.ref_name }}" "./dist/*.AppImage"
  #     #     gh release upload "${{ github.ref_name }}" "./dist/*.deb"
  #     #     gh release upload "${{ github.ref_name }}" "./dist/*.freebsb"
  #     #     gh release upload "${{ github.ref_name }}" "./dist/*.rpm"

